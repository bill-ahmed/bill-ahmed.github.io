{"version":3,"sources":["assets/images/ultrasonic_sensor_2.jpg","assets/fire-solid.svg","assets/money-check-alt-solid.svg","assets/microchip-solid.svg","components/Header.js","serviceWorker.js","components/hobbies.js","components/projects.js","components/GalleryData.js","components/MainBody.js","components/Footer.js","App.js","index.js","assets/laptop-code-solid.svg","assets/github-brands.svg","assets/linkedin-in-brands.svg","assets/facebook-brands.svg","assets/images/ddsblaze_homepage.jpg","assets/images/ddsblaze_undo_checkin.jpg","assets/images/ddsblaze_send_bulk_message.jpg","assets/images/ultrasonic_sensor_1.jpg","assets/images/motion_pong_splashscreen.jpg","assets/images/motion_pong_gameplay_1_noAudio.mp4"],"names":["module","exports","__webpack_require__","p","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_ButtonGroup__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_7__","handleButtonClick","location","window","replace","console","log","document","querySelector","scrollIntoView","behavior","Header","navButtonVariant","isMobileUser","a","createElement","id","className","size","color","variant","onClick","title","href","target","alt","src","require","width","height","fontSize","d","__webpack_exports__","unregister","Boolean","hostname","match","navigator","serviceWorker","ready","then","registration","Hobbies","props","react_default","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","gridList","allGalleryData","type","img","cols","ddsblazeGalleryData","motionPongGalleryData","createProjectDisplay","name","desc","techUsed","hypref","imgObj","galleryOpen","animationOptions","Paper","data-aos","getRandomFadeAnimation","length","data-aos-once","Button","OpenInNew_default","style","marginLeft","Divider","map","elem","Chip","key","label","min","max","Math","floor","random","Projects","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_React$useState3","_React$useState4","setName","classes","populateGallery","project1Image","project2Image","project3Image","project1","project2","project3","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","nameOfProject","GridList","cellHeight","GridListTile","controls","frameBorder","allow","allowfullscreen","getGalleryProps","MainBody","projects","hobbies","Footer","App","components_MainBody","components_Footer","r","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","_serviceWorker__WEBPACK_IMPORTED_MODULE_4__","test","userAgent","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5ce07289.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ultrasonic_sensor_2.4c197f5d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fire-solid.045f997c.svg\";","module.exports = __webpack_public_path__ + \"static/media/money-check-alt-solid.59eb4593.svg\";","module.exports = __webpack_public_path__ + \"static/media/microchip-solid.f70f1a06.svg\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NavigationDrawer from './NavigationDrawer';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './css/Header.css';\r\n\r\nfunction handleButtonClick(location){\r\n    switch(location){\r\n        case \"home\":\r\n            window.location.replace(\"/\");\r\n            break;\r\n        case \"projects\":\r\n            console.log(\"set location to projects\");\r\n            document.querySelector('#projects').scrollIntoView({ \r\n                behavior: 'smooth' \r\n            });\r\n            break;\r\n        case \"hobbies\":\r\n            // Scroll to a certain element\r\n            document.querySelector('#hobbies').scrollIntoView({ \r\n                behavior: 'smooth' \r\n            });\r\n            break;\r\n\r\n        case \"top\":\r\n            // Sroll back to the top of the page\r\n            document.querySelector(\"html\").scrollIntoView(true);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    \r\n}\r\n\r\nfunction Header(){\r\n    // If user is in mobile view, give the nav buttons a border\r\n    var isMobileUser = global.isMobileUser;\r\n    let navButtonVariant = \"text\";\r\n    if(isMobileUser){\r\n        console.log(\"is mobile user, changing button styles\");\r\n        navButtonVariant = \"outlined\";\r\n    }\r\n\r\n    return(\r\n        <div id=\"headerContent\" className=\"headerContent\">\r\n            <div className=\"navigation\">\r\n                {/* <div className=\"leftNavigation\">\r\n                    {isMobileUser && <NavigationDrawer handleButtonClick={handleButtonClick}/>}\r\n                </div> */}\r\n\r\n                <ButtonGroup size=\"medium\" color=\"inherit\" className=\"rightNavigation\">\r\n                    <Button className=\"navButton\" size=\"medium\" variant={navButtonVariant} color=\"inherit\" onClick={() => handleButtonClick(\"home\")}>Home</Button>\r\n                    <Button className=\"navButton\" size=\"medium\" variant={navButtonVariant} color=\"inherit\" onClick={() => handleButtonClick(\"projects\")}>Projects</Button>\r\n                    <Button className=\"navButton\" size=\"medium\" variant={navButtonVariant} color=\"inherit\" onClick={() => handleButtonClick(\"hobbies\")}>Hobbies</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n\r\n            <div className=\"shortIntro\">\r\n                <h1>Bilal Ahmed</h1>\r\n                <h3><i>A Computer Science student at the University of Toronto that's passionate\r\n                     about web design and software development.</i></h3>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"socialLinks\">\r\n\r\n                {/* GitHub logo */}\r\n                <Tooltip title=\"GitHub\">\r\n                    <Fab size=\"large\" className=\"socialLink\" href=\"https://github.com/bill-ahmed\" target=\"_blank\">\r\n                        <img alt=\"Link to GitHub\" src={require(\"../assets/github-brands.svg\")} width=\"80%\" height=\"80%\"/>\r\n                    </Fab>\r\n                </Tooltip>\r\n                \r\n                {/* LinkedIn logo */}\r\n                <Tooltip title=\"LinkedIn\">\r\n                    <Fab size=\"large\" className=\"socialLink\" href=\"https://www.linkedin.com/in/bill-ahmed/\" target=\"_blank\">\r\n                        <img alt=\"Link to LinkedIn\" className=\"roundedImage\" src={require(\"../assets/linkedin-in-brands.svg\")} width=\"60%\" height=\"60%\"/>\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n                {/* Facebook logo */}\r\n                <Tooltip title=\"Facebook\">\r\n                    <Fab size=\"large\" className=\"socialLink\" href=\"https://www.facebook.com/BillAhmed4343\" target=\"_blank\">\r\n                        <img alt=\"Link to Facebook\" className=\"roundedImage\" src={require(\"../assets/facebook-brands.svg\")} width=\"80%\" height=\"80%\"/>\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n                {/* Resume */}\r\n                <Tooltip title=\"My Resume/CV\">\r\n                    <Fab size=\"large\" className=\"socialLink\" variant=\"extended\">\r\n                        Resume/CV\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <IconButton size=\"medium\" color=\"inherit\" id=\"linkToProjectSection\" onClick={() => handleButtonClick(\"projects\")}>\r\n                <ExpandMoreIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <br/>\r\n            <br/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './css/Hobbies.css';\r\n\r\n/**A component to represent the hobbies section */\r\nfunction Hobbies(props) {\r\n    return(\r\n        <div id=\"hobbies\" className=\"hobbies\">\r\n            <div>\r\n                <h1>Hobbies (coming soon!)</h1>\r\n                <div className=\"section1\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hobbies;","import { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport GalleryData from './GalleryData';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './css/Projects.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'space-around',\r\n      overflow: 'hidden',\r\n    },\r\n    gridList: {\r\n      width: 500,\r\n      height: 450,\r\n    },\r\n  }));\r\n\r\n/* Define all the data for grid of images in \"Gallery\" view */\r\nconst allGalleryData = GalleryData();\r\nconst ddsblazeGalleryData = allGalleryData[0];\r\nconst SpendingTrackerGalleryData = allGalleryData[1];\r\nconst motionPongGalleryData = allGalleryData[2];\r\n\r\n/**A component to represent the porjects section */\r\nfunction Projects(props) {\r\n    // Equivalent to react states\r\n    const [open, setOpen] = React.useState(false);\r\n    const [name, setName] = React.useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    /**Open the pop-up dialog */\r\n    function handleGalleryOpen(){\r\n        setOpen(true);\r\n    }\r\n    \r\n    /**Close the pop-up dialog */\r\n    function handleGalleryClose(){\r\n        setOpen(false);\r\n    }\r\n\r\n    /**Information to put inside the galley. This function will also open\r\n     * the pop-up dialog\r\n     * @param name The name of the project\r\n     */\r\n    function populateGallery(name){\r\n        // Open the gallery for viewing\r\n        handleGalleryOpen();\r\n\r\n        // Update data used in gallery\r\n        setName(name);\r\n    }\r\n\r\n    let project1Image = require(\"../assets/fire-solid.svg\");\r\n    let project2Image = require('../assets/money-check-alt-solid.svg');\r\n    let project3Image = require('../assets/microchip-solid.svg');\r\n\r\n    let project1 = createProjectDisplay(\"DDSBlaze\", \"Web application to keep track of individuals during fire \" + \r\n                                        \"alarms and other emergencies\",\r\n                                        [\"React.js\", \"Express.js\", \"Node.js\", \"Microsoft Graph\", \"Twilio API\"], \r\n                                        \"https://ddsblaze.herokuapp.com\", project1Image, populateGallery);\r\n\r\n    let project2 = createProjectDisplay(\"SpendingTracker\", \"A web-app to help track personal spending.\", \r\n                                        [\"Python/Flask\", \"React.js\", \"Google Firebase\", \"NoSQL\",\"Gunicorn/Nginx\"],\r\n                                        \"https://github.com/bill-ahmed/SpendingTracker\", project2Image, populateGallery);\r\n\r\n    let project3 = createProjectDisplay(\"Motion Pong\", \"A game of Pong that utilizes ultrasonic sensors for a \" + \r\n                                        \"deeper level of interaction with the user.\", \r\n                                        [\"Altera DE2-115\", \"Verilog HDL\", \"Ultrasonic Sensors\"],\r\n                                        \"https://github.com/bill-ahmed/CSCB58-Final-Project\", project3Image, populateGallery);\r\n    return(\r\n        <div id=\"projects\" className=\"projects\">\r\n            <h1>Projects</h1>\r\n            <Divider variant=\"middle\"/>\r\n            <div className=\"projectsContainer\">\r\n                <div className=\"projectsSubsection\">\r\n                    {project1}\r\n                    {project2}\r\n                    {project3}\r\n                </div>\r\n            </div>\r\n            <Dialog open={open} onClose={() => handleGalleryClose()}>\r\n                <DialogTitle>{name}</DialogTitle>\r\n                <Divider variant=\"fullWidth\"/>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    {getGalleryProps(name, classes)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**Create a generic project display with the given data \r\n * @param name Name of the project to display\r\n * @param desc Brief description of the project\r\n * @param techUsed String[] of various tools/technologies used\r\n * @param hypref An external link where a user can find more information\r\n * @param imgObj As of writing, <img> tags don't work unless you do <img src={require(\"pathToImage\")}>.\r\n * Hence, imbObj is the return value of require() \r\n * @param galleryOpen (bool) Determine if gallery is open or not\r\n * @returns An element populated with the given data\r\n*/\r\nfunction createProjectDisplay(name, desc, techUsed, hypref, imgObj, galleryOpen){\r\n    \r\n    // Array of allowed AOS animations for this component\r\n    let animationOptions = [\"fade-up\", \"fade-left\", \"fade-right\"];\r\n\r\n    return(\r\n        <Paper className=\"individualProject\" data-aos={getRandomFadeAnimation(0, \r\n                                                        animationOptions.length, animationOptions)} data-aos-once=\"true\">\r\n            <img alt={name + \" Logo\"} className=\"projectPhoto\" src={imgObj} width=\"70px\" height=\"70px\"/>\r\n            <div className=\"projectDetails\">\r\n                <h2>{name}</h2>\r\n                <h3>{desc}</h3>\r\n                <Button variant=\"outlined\" className=\"seeMoreButton\" \r\n                onClick={() => galleryOpen(name)}>\r\n                    Gallery\r\n                </Button>\r\n\r\n                <Button variant=\"outlined\" className=\"seeMoreButton\" \r\n                href={hypref} target=\"_blank\">\r\n                    View More\r\n                    <OpenInNewIcon style={{marginLeft : \"5px\"}}/>\r\n                </Button>\r\n            </div>\r\n            <Divider variant=\"middle\"/>\r\n            <div>\r\n                {techUsed.map((elem) => (\r\n                    <Chip key={elem} className=\"techUsedChips\" label={elem}/>\r\n                ))}\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n/**Given the name of a project, generate all images/videos that should\r\n * be included to show off the project\r\n * @param nameOfProject The name of the project\r\n * @returns A <div> containing all pictures/vidoes neatly formatted\r\n */\r\nfunction getGalleryProps(nameOfProject, classes){\r\n    switch(nameOfProject){\r\n        case \"DDSBlaze\":\r\n            return (\r\n                <div className={classes.root}>\r\n                    {/* Gallery of images for this project */}\r\n                    <GridList cellHeight={270} cols={3} className={classes.gridList}>\r\n                        {ddsblazeGalleryData.map(title => (\r\n                            <GridListTile key={title.img} cols={title.cols || 1}>\r\n                                {title.type === \"image\" ? <img src={title.img} alt={title.title}/> : \r\n                                <video width=\"100%\" height=\"100%\" controls alt={title.title}>\r\n                                    <source src={title.img} type=\"video/mp4\"/>\r\n                                </video>}\r\n                            </GridListTile>\r\n                        ))}\r\n                    </GridList>\r\n                    <p>More coming soon!</p>\r\n                </div>\r\n            )\r\n        case \"SpendingTracker\":\r\n            return (\r\n            \"Coming soon!\"\r\n            )\r\n        case \"Motion Pong\":\r\n            return(\r\n                <div className={classes.root}>\r\n                    {/* Gallery of images for this project */}\r\n                    <GridList cellHeight={270} cols={3} className={classes.gridList}>\r\n                            <GridListTile key=\"motionPongVideo\" cols={3}>\r\n                                <iframe width=\"100%\" height=\"100%\" title=\"Motion Pong Video\" src=\"https://www.youtube.com/embed/NO6y1-P6fCI\" \r\n                                frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n                                allowfullscreen/>\r\n                            </GridListTile>\r\n                        {motionPongGalleryData.map(title => (\r\n                            <GridListTile key={title.img} cols={title.cols || 1}>\r\n                                {title.type === \"image\" ? <img src={title.img} alt={title.title}/> : \r\n                                <video width=\"100%\" height=\"100%\" controls alt={title.title}>\r\n                                    <source src={title.img} type=\"video/mp4\"/>\r\n                                </video>}\r\n                            </GridListTile>\r\n                        ))}\r\n                    </GridList>\r\n                </div>\r\n            )\r\n        default:\r\n            return(\r\n            <h3>N/A</h3>\r\n            )\r\n    }\r\n}\r\n\r\nfunction getRandomFadeAnimation(min, max, animationOptions){\r\n    // Index of element to return\r\n    let index = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n    return animationOptions[index];\r\n}\r\n\r\nexport default Projects;","/**Return data for each projects gallery\r\n * index 0 --> ddsblaze\r\n * index 1 --> spendingtracker\r\n * index 2 --> motion pong\r\n */\r\nexport default function GalleryData(){\r\n    return(\r\n        [[{\r\n            type: \"image\",\r\n            img: require('../assets/images/ddsblaze_homepage.jpg'),\r\n            title: 'DDSBlaze Homepage',\r\n            cols: 1,\r\n        }, {\r\n            type: \"image\",\r\n            img: require('../assets/images/ddsblaze_undo_checkin.jpg'),\r\n            title: 'DDSBlaze Undo Check In',\r\n            cols: 1,\r\n        }, {\r\n            type: \"image\",\r\n            img: require('../assets/images/ddsblaze_send_bulk_message.jpg'),\r\n            title: 'DDSBlaze Undo Check In',\r\n            cols: 1,\r\n        }], [{\r\n\r\n        }], [{\r\n            type: \"image\",\r\n            img: require('../assets/images/ultrasonic_sensor_1.jpg'),\r\n            title: 'Ultrasonic Sensor',\r\n            cols: 1,\r\n        }, {\r\n            type: \"image\",\r\n            img: require('../assets/images/motion_pong_splashscreen.jpg'),\r\n            title: 'Splash screen',\r\n            cols: 2,\r\n        }, {\r\n            type: \"video\",\r\n            img: require('../assets/images/motion_pong_gameplay_1_noAudio.mp4'),\r\n            title: 'Gameplay Video',\r\n            cols: 3,\r\n        }, {\r\n            type: \"image\",\r\n            img: require('../assets/images/ultrasonic_sensor_2.jpg'),\r\n            title: 'Ultrasonic Sensor, Alternate Angle',\r\n            cols: 3,\r\n        }]]\r\n    );\r\n}","import React from 'react';\r\nimport Hobbies from './hobbies';\r\nimport Projects from './projects';\r\nimport './css/MainBody.css';\r\n\r\n/**Main body section, which includes projects and hobbies */\r\nfunction MainBody(props) {\r\n    return(\r\n        <div className=\"mainBody\">\r\n            <Projects/>\r\n            <Hobbies/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainBody;","import React from 'react';\r\nimport './css/Footer.css';\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <h4>{\"{ Some important footer stuff. }\"}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Header from './components/Header';\nimport MainBody from './components/MainBody';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <title>Bilal Ahmed</title>\n      <Header className=\"appHeader\"/>\n      <div className=\"Body\">\n\n      <MainBody/>\n      \n      </div>\n\n      <Footer className=\"appFooter\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Determine if a user is on a mobile device or not\nlet isMobileUser = false;\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n      isMobileUser = true;\n    }\nglobal.isMobileUser = isMobileUser;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/laptop-code-solid.6a8f9dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-brands.ec5bc1b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-in-brands.1e01f0c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-brands.62d8b6ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/ddsblaze_homepage.40cba9e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ddsblaze_undo_checkin.1f4f948d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ddsblaze_send_bulk_message.756553f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ultrasonic_sensor_1.27a62134.jpg\";","module.exports = __webpack_public_path__ + \"static/media/motion_pong_splashscreen.b80343c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/motion_pong_gameplay_1_noAudio.785ad8c4.mp4\";"],"sourceRoot":""}