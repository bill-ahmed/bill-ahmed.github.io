{"version":3,"sources":["components/Header.js","serviceWorker.js","components/hobbies.js","components/projects.js","components/MainBody.js","components/Footer.js","App.js","index.js","assets/laptop-code-solid.svg","assets/github-brands.svg","assets/linkedin-in-brands.svg","assets/facebook-brands.svg","assets/fire-solid.svg","assets/money-check-alt-solid.svg","assets/microchip-solid.svg"],"names":["global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_ButtonGroup__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_Fab__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Tooltip__WEBPACK_IMPORTED_MODULE_7__","handleButtonClick","location","window","replace","console","log","document","querySelector","scrollIntoView","behavior","Header","navButtonVariant","isMobileUser","a","createElement","id","className","size","color","variant","onClick","title","href","target","alt","src","require","width","height","fontSize","d","__webpack_exports__","unregister","Boolean","hostname","match","navigator","serviceWorker","ready","then","registration","Hobbies","props","react_default","createProjectDisplay","name","desc","techUsed","hypref","imgObj","galleryOpen","animationOptions","Paper","data-aos","getRandomFadeAnimation","length","data-aos-once","Button","OpenInNew_default","style","marginLeft","Divider","map","elem","Chip","key","label","min","max","Math","floor","random","Projects","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_React$useState3","_React$useState4","setName","populateGallery","project1Image","project2Image","project3Image","project1","project2","project3","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","nameOfProject","class","frameborder","allow","allowfullscreen","getGalleryProps","MainBody","projects","hobbies","Footer","App","components_MainBody","components_Footer","r","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","_serviceWorker__WEBPACK_IMPORTED_MODULE_4__","test","userAgent","ReactDOM","render","getElementById","module","exports","p"],"mappings":"0FAAA,SAAAA,GAAA,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,GAAAT,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAWA,SAASU,EAAkBC,GACvB,OAAOA,GACH,IAAK,OACDC,OAAOD,SAASE,QAAQ,KACxB,MACJ,IAAK,WACDC,QAAQC,IAAI,4BACZC,SAASC,cAAc,aAAaC,eAAe,CAC/CC,SAAU,WAEd,MACJ,IAAK,UAEDH,SAASC,cAAc,YAAYC,eAAe,CAC9CC,SAAU,WAEd,MAEJ,IAAK,MAEDH,SAASC,cAAc,QAAQC,gBAAe,IA+E3CE,IAvEf,WAEI,IACIC,EAAmB,OAMvB,OAPmBvB,EAAOwB,eAGtBR,QAAQC,IAAI,0CACZM,EAAmB,YAInBpB,EAAAsB,EAAAC,cAAA,OAAKC,GAAG,gBAAgBC,UAAU,iBAC9BzB,EAAAsB,EAAAC,cAAA,OAAKE,UAAU,cAKXzB,EAAAsB,EAAAC,cAACpB,EAAA,EAAD,CAAauB,KAAK,SAASC,MAAM,UAAUF,UAAU,mBACjDzB,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,CAAQuB,UAAU,YAAYC,KAAK,SAASE,QAASR,EAAkBO,MAAM,UAAUE,QAAS,kBAAMpB,EAAkB,UAAxH,QACAT,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,CAAQuB,UAAU,YAAYC,KAAK,SAASE,QAASR,EAAkBO,MAAM,UAAUE,QAAS,kBAAMpB,EAAkB,cAAxH,YACAT,EAAAsB,EAAAC,cAACrB,EAAA,EAAD,CAAQuB,UAAU,YAAYC,KAAK,SAASE,QAASR,EAAkBO,MAAM,UAAUE,QAAS,kBAAMpB,EAAkB,aAAxH,aAIRT,EAAAsB,EAAAC,cAAA,OAAKE,UAAU,cACXzB,EAAAsB,EAAAC,cAAA,yBACAvB,EAAAsB,EAAAC,cAAA,UAAIvB,EAAAsB,EAAAC,cAAA,mIAGRvB,EAAAsB,EAAAC,cAAA,WACAvB,EAAAsB,EAAAC,cAAA,WACAvB,EAAAsB,EAAAC,cAAA,OAAKE,UAAU,eAGXzB,EAAAsB,EAAAC,cAACf,EAAA,EAAD,CAASsB,MAAM,UACX9B,EAAAsB,EAAAC,cAACjB,EAAA,EAAD,CAAKoB,KAAK,QAAQD,UAAU,aAAaM,KAAK,gCAAgCC,OAAO,UACjFhC,EAAAsB,EAAAC,cAAA,OAAKU,IAAI,iBAAiBC,IAAKC,EAAQ,IAAgCC,MAAM,MAAMC,OAAO,UAKlGrC,EAAAsB,EAAAC,cAACf,EAAA,EAAD,CAASsB,MAAM,YACX9B,EAAAsB,EAAAC,cAACjB,EAAA,EAAD,CAAKoB,KAAK,QAAQD,UAAU,aAAaM,KAAK,0CAA0CC,OAAO,UAC3FhC,EAAAsB,EAAAC,cAAA,OAAKU,IAAI,mBAAmBR,UAAU,eAAeS,IAAKC,EAAQ,IAAqCC,MAAM,MAAMC,OAAO,UAKlIrC,EAAAsB,EAAAC,cAACf,EAAA,EAAD,CAASsB,MAAM,YACX9B,EAAAsB,EAAAC,cAACjB,EAAA,EAAD,CAAKoB,KAAK,QAAQD,UAAU,aAAaM,KAAK,yCAAyCC,OAAO,UAC1FhC,EAAAsB,EAAAC,cAAA,OAAKU,IAAI,mBAAmBR,UAAU,eAAeS,IAAKC,EAAQ,IAAkCC,MAAM,MAAMC,OAAO,UAK/HrC,EAAAsB,EAAAC,cAACf,EAAA,EAAD,CAASsB,MAAM,gBACX9B,EAAAsB,EAAAC,cAACjB,EAAA,EAAD,CAAKoB,KAAK,QAAQD,UAAU,aAAaG,QAAQ,YAAjD,eAMR5B,EAAAsB,EAAAC,cAAChB,EAAA,EAAD,CAAYmB,KAAK,SAASC,MAAM,UAAUH,GAAG,uBAAuBK,QAAS,kBAAMpB,EAAkB,cACjGT,EAAAsB,EAAAC,cAAClB,EAAAiB,EAAD,CAAgBgB,SAAS,WAE7BtC,EAAAsB,EAAAC,cAAA,WACAvB,EAAAsB,EAAAC,cAAA,iECxGZxB,EAAAwC,EAAAC,EAAA,sBAAAC,IAYoBC,QACW,cAA7B/B,OAAOD,SAASiC,UAEe,UAA7BhC,OAAOD,SAASiC,UAEhBhC,OAAOD,SAASiC,SAASC,MACvB,2DA8GC,SAASH,IACV,kBAAmBI,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaR,mFCnHJS,MAZf,SAAiBC,GACb,OACIC,EAAA9B,EAAAC,cAAA,OAAKC,GAAG,UAAUC,UAAU,WACxB2B,EAAA9B,EAAAC,cAAA,WACI6B,EAAA9B,EAAAC,cAAA,oCACA6B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,qHCqF/B,SAAS4B,EAAqBC,EAAMC,EAAMC,EAAUC,EAAQC,EAAQC,GAGhE,IAAIC,EAAmB,CAAC,UAAW,YAAa,cAEhD,OACIR,EAAA9B,EAAAC,cAACsC,EAAA,EAAD,CAAOpC,UAAU,oBAAoBqC,WAAUC,EAAuB,EACtBH,EAAiBI,OAAQJ,GAAmBK,gBAAc,QACtGb,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,eAAeS,IAAKwB,EAAQtB,MAAM,OAAOC,OAAO,SAC/De,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,kBACX2B,EAAA9B,EAAAC,cAAA,UAAK+B,GACLF,EAAA9B,EAAAC,cAAA,UAAKgC,GACLH,EAAA9B,EAAAC,cAAC2C,EAAA,EAAD,CAAQtC,QAAQ,WAAWH,UAAU,gBACrCI,QAAS,kBAAM8B,EAAYL,KAD3B,WAKAF,EAAA9B,EAAAC,cAAC2C,EAAA,EAAD,CAAQtC,QAAQ,WAAWH,UAAU,gBACrCM,KAAM0B,EAAQzB,OAAO,UADrB,YAGIoB,EAAA9B,EAAAC,cAAC4C,EAAA7C,EAAD,CAAe8C,MAAO,CAACC,WAAa,WAG5CjB,EAAA9B,EAAAC,cAAC+C,EAAA,EAAD,CAAS1C,QAAQ,WACjBwB,EAAA9B,EAAAC,cAAA,WACKiC,EAASe,IAAI,SAACC,GAAD,OACVpB,EAAA9B,EAAAC,cAACkD,EAAA,EAAD,CAAMC,IAAKF,EAAM/C,UAAU,gBAAgBkD,MAAOH,QA8BtE,SAAST,EAAuBa,EAAKC,EAAKjB,GAItC,OAAOA,EAFKkB,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,GAK3CK,MA7If,SAAkB9B,GAAO,IAAA+B,EAEGC,IAAMC,UAAS,GAFlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEdM,EAFcH,EAAA,GAERI,EAFQJ,EAAA,GAAAK,EAGGP,IAAMC,SAAS,IAHlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGdpC,EAHcqC,EAAA,GAGRC,EAHQD,EAAA,GAmBrB,SAASE,EAAgBvC,GAErBzC,QAAQC,IAAI,2BAdZ2E,GAAQ,GAkBRG,EAAQtC,GAGZ,IAAIwC,EAAgB3D,EAAQ,IACxB4D,EAAgB5D,EAAQ,IACxB6D,EAAgB7D,EAAQ,IAExB8D,EAAW5C,EAAqB,WAAY,wFAEZ,CAAC,WAAY,aAAc,UAAW,kBAAmB,cACzD,iCAAkCyC,EAAeD,GAEjFK,EAAW7C,EAAqB,kBAAmB,6CACnB,CAAC,eAAgB,WAAY,kBAAmB,QAAQ,kBACxD,gDAAiD0C,EAAeF,GAEhGM,EAAW9C,EAAqB,cAAe,mGAEf,CAAC,iBAAkB,cAAe,sBAClC,qDAAsD2C,EAAeH,GACzG,OACIzC,EAAA9B,EAAAC,cAAA,OAAKC,GAAG,WAAWC,UAAU,YACzB2B,EAAA9B,EAAAC,cAAA,sBACA6B,EAAA9B,EAAAC,cAAC+C,EAAA,EAAD,CAAS1C,QAAQ,WACjBwB,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,qBACX2B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,sBACVwE,EACAC,EACAC,IAGT/C,EAAA9B,EAAAC,cAAC6E,EAAA,EAAD,CAAQZ,KAAMA,EAAMa,QAAS,WA5CjCZ,GAAQ,KA6CArC,EAAA9B,EAAAC,cAAC+E,EAAA,EAAD,KAAchD,GACdF,EAAA9B,EAAAC,cAAC+C,EAAA,EAAD,CAAS1C,QAAQ,cACjBwB,EAAA9B,EAAAC,cAACgF,EAAA,EAAD,KACInD,EAAA9B,EAAAC,cAACiF,EAAA,EAAD,KAwDpB,SAAyBC,GACrB,OAAOA,GACH,IAAK,WAEL,IAAK,kBACD,OAAQrD,EAAA9B,EAAAC,cAAA,0BACZ,IAAK,cACD,OACI6B,EAAA9B,EAAAC,cAAA,OAAKmF,MAAM,cACXtD,EAAA9B,EAAAC,cAAA,UAAQa,MAAM,MAAMC,OAAO,MAAMH,IAAI,4CAC7ByE,YAAY,IAAIC,MAAM,0EACtBC,iBAAe,IACvBzD,EAAA9B,EAAAC,cAAA,iCAnEKuF,CAAgBxD,cC9DtByD,MATf,SAAkB5D,GACd,OACIC,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,YACX2B,EAAA9B,EAAAC,cAACyF,EAAD,MACA5D,EAAA9B,EAAAC,cAAC0F,EAAD,cCAGC,MARf,SAAgB/D,GACZ,OACIC,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,UACX2B,EAAA9B,EAAAC,cAAA,UAAK,4CCkBF4F,IAjBf,WAEE,OACE/D,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,OACb2B,EAAA9B,EAAAC,cAAA,4BACA6B,EAAA9B,EAAAC,cAACJ,EAAA,EAAD,CAAQM,UAAU,cAClB2B,EAAA9B,EAAAC,cAAA,OAAKE,UAAU,QAEf2B,EAAA9B,EAAAC,cAAC6F,EAAD,OAIAhE,EAAA9B,EAAAC,cAAC8F,EAAD,CAAQ5F,UAAU,qFClBxB1B,EAAAuH,EAAA9E,GAAA,SAAA3C,GAAA,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAyH,EAAAxH,EAAA,GAAAyH,EAAAzH,EAAAE,EAAAsH,GAAAE,GAAA1H,EAAA,IAAAA,EAAA,KAAA2H,EAAA3H,EAAA,IAOIsB,GAAe,EACX,iEAAiEsG,KAAK9E,UAAU+E,aAClFvG,GAAe,GAErBxB,EAAOwB,aAAeA,EAEtBwG,IAASC,OAAO9H,EAAAsB,EAAAC,cAACkG,EAAA,EAAD,MAAS1G,SAASgH,eAAe,SAKjDjF,sMClBAkF,EAAAC,QAAiBlI,EAAAmI,EAAuB,uFCAxCF,EAAAC,QAAiBlI,EAAAmI,EAAuB,8DCAxCF,EAAAC,QAAiBlI,EAAAmI,EAAuB,mECAxCF,EAAAC,QAAiBlI,EAAAmI,EAAuB,0GCAxCF,EAAAC,QAAiBlI,EAAAmI,EAAuB,2DCAxCF,EAAAC,QAAiBlI,EAAAmI,EAAuB,sECAxCF,EAAAC,QAAiBlI,EAAAmI,EAAuB","file":"static/js/main.c396eded.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NavigationDrawer from './NavigationDrawer';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './css/Header.css';\r\n\r\nfunction handleButtonClick(location){\r\n    switch(location){\r\n        case \"home\":\r\n            window.location.replace(\"/\");\r\n            break;\r\n        case \"projects\":\r\n            console.log(\"set location to projects\");\r\n            document.querySelector('#projects').scrollIntoView({ \r\n                behavior: 'smooth' \r\n            });\r\n            break;\r\n        case \"hobbies\":\r\n            // Scroll to a certain element\r\n            document.querySelector('#hobbies').scrollIntoView({ \r\n                behavior: 'smooth' \r\n            });\r\n            break;\r\n\r\n        case \"top\":\r\n            // Sroll back to the top of the page\r\n            document.querySelector(\"html\").scrollIntoView(true);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    \r\n}\r\n\r\nfunction Header(){\r\n    // If user is in mobile view, give the nav buttons a border\r\n    var isMobileUser = global.isMobileUser;\r\n    let navButtonVariant = \"text\";\r\n    if(isMobileUser){\r\n        console.log(\"is mobile user, changing button styles\");\r\n        navButtonVariant = \"outlined\";\r\n    }\r\n\r\n    return(\r\n        <div id=\"headerContent\" className=\"headerContent\">\r\n            <div className=\"navigation\">\r\n                {/* <div className=\"leftNavigation\">\r\n                    {isMobileUser && <NavigationDrawer handleButtonClick={handleButtonClick}/>}\r\n                </div> */}\r\n\r\n                <ButtonGroup size=\"medium\" color=\"inherit\" className=\"rightNavigation\">\r\n                    <Button className=\"navButton\" size=\"medium\" variant={navButtonVariant} color=\"inherit\" onClick={() => handleButtonClick(\"home\")}>Home</Button>\r\n                    <Button className=\"navButton\" size=\"medium\" variant={navButtonVariant} color=\"inherit\" onClick={() => handleButtonClick(\"projects\")}>Projects</Button>\r\n                    <Button className=\"navButton\" size=\"medium\" variant={navButtonVariant} color=\"inherit\" onClick={() => handleButtonClick(\"hobbies\")}>Hobbies</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n\r\n            <div className=\"shortIntro\">\r\n                <h1>Bilal Ahmed</h1>\r\n                <h3><i>A Computer Science student at the University of Toronto that's passionate\r\n                     about web design and software development.</i></h3>\r\n            </div>\r\n            <br/>\r\n            <br/>\r\n            <div className=\"socialLinks\">\r\n\r\n                {/* GitHub logo */}\r\n                <Tooltip title=\"GitHub\">\r\n                    <Fab size=\"large\" className=\"socialLink\" href=\"https://github.com/bill-ahmed\" target=\"_blank\">\r\n                        <img alt=\"Link to GitHub\" src={require(\"../assets/github-brands.svg\")} width=\"80%\" height=\"80%\"/>\r\n                    </Fab>\r\n                </Tooltip>\r\n                \r\n                {/* LinkedIn logo */}\r\n                <Tooltip title=\"LinkedIn\">\r\n                    <Fab size=\"large\" className=\"socialLink\" href=\"https://www.linkedin.com/in/bill-ahmed/\" target=\"_blank\">\r\n                        <img alt=\"Link to LinkedIn\" className=\"roundedImage\" src={require(\"../assets/linkedin-in-brands.svg\")} width=\"60%\" height=\"60%\"/>\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n                {/* Facebook logo */}\r\n                <Tooltip title=\"Facebook\">\r\n                    <Fab size=\"large\" className=\"socialLink\" href=\"https://www.facebook.com/BillAhmed4343\" target=\"_blank\">\r\n                        <img alt=\"Link to Facebook\" className=\"roundedImage\" src={require(\"../assets/facebook-brands.svg\")} width=\"80%\" height=\"80%\"/>\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n                {/* Resume */}\r\n                <Tooltip title=\"My Resume/CV\">\r\n                    <Fab size=\"large\" className=\"socialLink\" variant=\"extended\">\r\n                        Resume/CV\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n            </div>\r\n            <IconButton size=\"medium\" color=\"inherit\" id=\"linkToProjectSection\" onClick={() => handleButtonClick(\"projects\")}>\r\n                <ExpandMoreIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            <br/>\r\n            <br/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './css/Hobbies.css';\r\n\r\n/**A component to represent the hobbies section */\r\nfunction Hobbies(props) {\r\n    return(\r\n        <div id=\"hobbies\" className=\"hobbies\">\r\n            <div>\r\n                <h1>Hobbies (coming soon!)</h1>\r\n                <div className=\"section1\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hobbies;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './css/Projects.css';\r\n\r\n/**A component to represent the porjects section */\r\nfunction Projects(props) {\r\n    // Equivalent to react states\r\n    const [open, setOpen] = React.useState(false);\r\n    const [name, setName] = React.useState(\"\");\r\n\r\n    /**Open the pop-up dialog */\r\n    function handleGalleryOpen(){\r\n        setOpen(true);\r\n    }\r\n    \r\n    /**Close the pop-up dialog */\r\n    function handleGalleryClose(){\r\n        setOpen(false);\r\n    }\r\n\r\n    /**Information to put inside the galley. This function will also open\r\n     * the pop-up dialog\r\n     * @param name The name of the project\r\n     */\r\n    function populateGallery(name){\r\n        // Open the gallery for viewing\r\n        console.log(\"inside populate gallery\");\r\n        handleGalleryOpen();\r\n\r\n        // Update data used in gallery\r\n        setName(name);\r\n    }\r\n\r\n    let project1Image = require(\"../assets/fire-solid.svg\");\r\n    let project2Image = require('../assets/money-check-alt-solid.svg');\r\n    let project3Image = require('../assets/microchip-solid.svg');\r\n\r\n    let project1 = createProjectDisplay(\"DDSBlaze\", \"Web application to keep track of individuals during fire \" + \r\n                                        \"alarms and other emergencies\",\r\n                                        [\"React.js\", \"Express.js\", \"Node.js\", \"Microsoft Graph\", \"Twilio API\"], \r\n                                        \"https://ddsblaze.herokuapp.com\", project1Image, populateGallery);\r\n\r\n    let project2 = createProjectDisplay(\"SpendingTracker\", \"A web-app to help track personal spending.\", \r\n                                        [\"Python/Flask\", \"React.js\", \"Google Firebase\", \"NoSQL\",\"Gunicorn/Nginx\"],\r\n                                        \"https://github.com/bill-ahmed/SpendingTracker\", project2Image, populateGallery);\r\n\r\n    let project3 = createProjectDisplay(\"Motion Pong\", \"A game of Pong that utilizes ultrasonic sensors for a \" + \r\n                                        \"deeper level of interaction with the user.\", \r\n                                        [\"Altera DE2-115\", \"Verilog HDL\", \"Ultrasonic Sensors\"],\r\n                                        \"https://github.com/bill-ahmed/CSCB58-Final-Project\", project3Image, populateGallery);\r\n    return(\r\n        <div id=\"projects\" className=\"projects\">\r\n            <h1>Projects</h1>\r\n            <Divider variant=\"middle\"/>\r\n            <div className=\"projectsContainer\">\r\n                <div className=\"projectsSubsection\">\r\n                    {project1}\r\n                    {project2}\r\n                    {project3}\r\n                </div>\r\n            </div>\r\n            <Dialog open={open} onClose={() => handleGalleryClose()}>\r\n                <DialogTitle>{name}</DialogTitle>\r\n                <Divider variant=\"fullWidth\"/>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                    {getGalleryProps(name)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n/**Create a generic project display with the given data \r\n * @param name Name of the project to display\r\n * @param desc Brief description of the project\r\n * @param techUsed String[] of various tools/technologies used\r\n * @param hypref An external link where a user can find more information\r\n * @param imgObj As of writing, <img> tags don't work unless you do <img src={require(\"pathToImage\")}>.\r\n * Hence, imbObj is the return value of require() \r\n * @returns An element populated with the given data\r\n*/\r\nfunction createProjectDisplay(name, desc, techUsed, hypref, imgObj, galleryOpen){\r\n    \r\n    // Array of allowed AOS animations for this component\r\n    let animationOptions = [\"fade-up\", \"fade-left\", \"fade-right\"];\r\n\r\n    return(\r\n        <Paper className=\"individualProject\" data-aos={getRandomFadeAnimation(0, \r\n                                                        animationOptions.length, animationOptions)} data-aos-once=\"true\">\r\n            <img className=\"projectPhoto\" src={imgObj} width=\"70px\" height=\"70px\"/>\r\n            <div className=\"projectDetails\">\r\n                <h2>{name}</h2>\r\n                <h3>{desc}</h3>\r\n                <Button variant=\"outlined\" className=\"seeMoreButton\" \r\n                onClick={() => galleryOpen(name)}>\r\n                    Gallery\r\n                </Button>\r\n\r\n                <Button variant=\"outlined\" className=\"seeMoreButton\" \r\n                href={hypref} target=\"_blank\">\r\n                    View More\r\n                    <OpenInNewIcon style={{marginLeft : \"5px\"}}/>\r\n                </Button>\r\n            </div>\r\n            <Divider variant=\"middle\"/>\r\n            <div>\r\n                {techUsed.map((elem) => (\r\n                    <Chip key={elem} className=\"techUsedChips\" label={elem}/>\r\n                ))}\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n/**Given the name of a project, generate all images/videos that should\r\n * be included to show off the project\r\n * @param nameOfProject The name of the project\r\n * @returns A <div> containing all pictures/vidoes neatly formatted\r\n */\r\nfunction getGalleryProps(nameOfProject){\r\n    switch(nameOfProject){\r\n        case \"DDSBlaze\":\r\n            return (<h3>Coming soon!</h3>)\r\n        case \"SpendingTracker\":\r\n            return (<h3>Coming soon!</h3>)\r\n        case \"Motion Pong\":\r\n            return(\r\n                <div class=\"videoEmbed\">\r\n                <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/NO6y1-P6fCI\" \r\n                        frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n                        allowfullscreen/>\r\n                <h3>More coming soon!</h3>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nfunction getRandomFadeAnimation(min, max, animationOptions){\r\n    // Index of element to return\r\n    let index = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n    return animationOptions[index];\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport Hobbies from './hobbies';\r\nimport Projects from './projects';\r\nimport './css/MainBody.css';\r\n\r\n/**Main body section, which includes projects and hobbies */\r\nfunction MainBody(props) {\r\n    return(\r\n        <div className=\"mainBody\">\r\n            <Projects/>\r\n            <Hobbies/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainBody;","import React from 'react';\r\nimport './css/Footer.css';\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <h4>{\"{ Some important footer stuff. }\"}</h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Header from './components/Header';\nimport MainBody from './components/MainBody';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <title>Bilal Ahmed</title>\n      <Header className=\"appHeader\"/>\n      <div className=\"Body\">\n\n      <MainBody/>\n      \n      </div>\n\n      <Footer className=\"appFooter\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Determine if a user is on a mobile device or not\nlet isMobileUser = false;\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n      isMobileUser = true;\n    }\nglobal.isMobileUser = isMobileUser;\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/laptop-code-solid.6a8f9dd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-brands.ec5bc1b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-in-brands.1e01f0c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-brands.62d8b6ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire-solid.045f997c.svg\";","module.exports = __webpack_public_path__ + \"static/media/money-check-alt-solid.59eb4593.svg\";","module.exports = __webpack_public_path__ + \"static/media/microchip-solid.f70f1a06.svg\";"],"sourceRoot":""}